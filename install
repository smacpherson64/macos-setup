#!/usr/bin/env bash
#
# bootstrap installs things.

# Set DOTFILES_ROOT ENV 
DOTFILES_ROOT=$(pwd -P)

# Stop on Errors
set -e

# Local Dotfiles Installer Commands

title () {
  printf "\n\033[00;32m $1\033[0m\n\n"
}

info () {
  printf "\r  [ \033[00;34m..\033[0m ] $1\n"
}

user () {
  printf "\r  [ \033[0;33m??\033[0m ] $1\n"
}

success () {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

fail () {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
  echo ''
  exit
}

setup_gitconfig () {
  if ! [ -f git/gitconfig.local.symlink ]
  then
    info 'setup gitconfig'

    git_credential='cache'
    if [ "$(uname -s)" == "Darwin" ]
    then
      git_credential='osxkeychain'
    fi

    user ' - What is your github author name?'
    read -e git_authorname
    user ' - What is your github author email?'
    read -e git_authoremail

    sed -e "s/AUTHORNAME/$git_authorname/g" -e "s/AUTHOREMAIL/$git_authoremail/g" -e "s/GIT_CREDENTIAL_HELPER/$git_credential/g" git/gitconfig.local.symlink.example > git/gitconfig.local.symlink
  fi
}

run_script () {
  local script=$1
  info "running: ${script}"
  sh -c ${script} && success "${script} was successful" || fail "${script} failed"
}

#
# Initilization
#

title 'starting macos init'

# Run all installers (ignore order)
find . -name install.sh | while read installer; do run_script ${installer}; done;

# Install Apps in Brewfile
if [ -x "$(command -v brew)" ];
  then
    brew bundle && success "installed brew bundle" || fail "installed brew bundle"
else
  user "skipping (install brew bundle), brew not installed"
fi

# Set macOS Defaults
if [ "$(uname -s)" == "Darwin" ]
then
  run_script "./macos/set-defaults.sh"
else
  user "skipping (set macos defaults), not macos, no need to set defaults"
fi

title 'macos init complete'